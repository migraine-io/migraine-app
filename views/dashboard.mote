% statistics.each do |year, data|
  <table class="statistics">
    <thead>
      <tr>
        <th width="10%">{{ year }}</th>
        <th width="10%"><abbr title="Total Output Scale">TOS</abbr></th>
        <th width="10%"><abbr title="Total Output Counter">TOC</abbr></th>
        <th width="10%"><abbr title="Total Output Average">TOA</abbr></th>
        <th width="60%">Inputs</th>
      </tr>
    </thead>

    <tbody>
      % data.each do |month, month_data|
        % outputs       = month_data.fetch(:outputs, [])
        % inputs        = month_data.fetch(:inputs, [])
        % total_scale   = outputs.map(&:scale).reduce(:+).to_i
        % total_count   = outputs.length
        % average_scale = (total_count == 0) ? 0 : total_scale.to_f / total_count
        <tr>
          <th>{{ Date::MONTHNAMES[month] }}</th>
          <td>{{ total_scale }}</td>
          <td>{{ total_count }}</td>
          <td>{{ average_scale }}</td>
          <td>
            % buf = inputs.group_by { |i| i.type_id }.sort_by { |group, values| -values.length }
            % buf = buf.map { |group, values| "#{ values.first.description } (#{ values.length })" if values.first }
            {{ buf.join " / " }}
          </td>
        </tr>
      % end
    </tbody>
  </table>
% end
